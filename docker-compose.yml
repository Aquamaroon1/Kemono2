version: '2.3'
services:
  kemono-db:
    image: healthcheck/postgres
    container_name: kemono-db
    environment:
      - POSTGRES_USER=nano
      - POSTGRES_PASSWORD=shinonome
      - POSTGRES_DB=kemonodb
    volumes:
      - db-data:/var/lib/postgresql/data/
    restart: unless-stopped
    # ports:
    #  - 5432:5432
  kemono-app:
    image: openyiff/kemonoparty
    container_name: kemono
    restart: unless-stopped
    depends_on:
      kemono-db:
        condition: service_healthy
    ports:
      - 8000:80
    env_file:
      - .env
    environment:
      - PGUSER=nano
      - PGPASSWORD=shinonome
      - PGDATABASE=kemonodb
      - PGHOST=kemono-db
      - ARCHIVERHOST=kemono-vpn
      - ARCHIVERPORT=80
    volumes:
      - ./flask.cfg:/app/flask.cfg
      - data:/storage
    sysctls:
      net.core.somaxconn: 40000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 1m
      timeout: 2m
      retries: 3
      start_period: 30s
  kemono-archiver:
    image: openyiff/kitsune
    network_mode: "service:kemono-vpn"
    container_name: kemono-archiver
    restart: unless-stopped
    depends_on:
      kemono-vpn:
        condition: service_started
      kemono-db:
        condition: service_healthy
    volumes:
      - ./kitsune.py:/app/config.py
      - data:/storage
    sysctls:
      net.core.somaxconn: 40000
  kemono-vpn:
    image: bubuntux/nordvpn
    network_mode: bridge
    container_name: kemono-vpn
    restart: unless-stopped
    env_file:
      - .env.vpn
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    devices:
      - /dev/net/tun
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ovpn-data:/app/ovpn/config
    environment:
      - TECHNOLOGY=NordLynx
    sysctls:
      net.ipv4.conf.all.rp_filter: 2
    ulimits:
      memlock:
        soft: -1
        hard: -1
  kemono-update:
    image: containrrr/watchtower
    container_name: kemono-update
    command: kemono kemono-archiver
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=30
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  autoheal:
    restart: always
    container_name: kemono-autoheal
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  ovpn-data:
  # If you need to store your volumes manually, uncomment the "driver_opts" lines and specify your "device" location.
  db-data:
    driver: local
    # driver_opts:
    #   type: 'none'
    #   o: 'bind'
    #   device: "/mnt/slab1/kemono-db"
  data:
    driver: local
    # driver_opts:
    #   type: 'none'
    #   o: 'bind'
    #   device: "/mnt/slab1/kemono"